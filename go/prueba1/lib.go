// Copyright 2020 IOTA Stiftung
// SPDX-License-Identifier: Apache-2.0

// (Re-)generated by schema tool
// >>>> DO NOT CHANGE THIS FILE! <<<<
// Change the json schema instead

//nolint:dupl
package prueba1

import "github.com/iotaledger/wasp/packages/vm/wasmlib/go/wasmlib"

func OnLoad() {
	exports := wasmlib.NewScExports()
	exports.AddFunc(FuncInit,     funcInitThunk)
	exports.AddFunc(FuncSetOwner, funcSetOwnerThunk)
	exports.AddFunc(FuncSetText,  funcSetTextThunk)
	exports.AddView(ViewGetOwner, viewGetOwnerThunk)
	exports.AddView(ViewGetText,  viewGetTextThunk)

	for i, key := range keyMap {
		idxMap[i] = key.KeyID()
	}
}

type InitContext struct {
	Params  ImmutableInitParams
	State   Mutableprueba1State
}

func funcInitThunk(ctx wasmlib.ScFuncContext) {
	ctx.Log("prueba1.funcInit")
	f := &InitContext{
		Params: ImmutableInitParams{
			id: wasmlib.OBJ_ID_PARAMS,
		},
		State: Mutableprueba1State{
			id: wasmlib.OBJ_ID_STATE,
		},
	}
	funcInit(ctx, f)
	ctx.Log("prueba1.funcInit ok")
}

type SetOwnerContext struct {
	Params  ImmutableSetOwnerParams
	State   Mutableprueba1State
}

func funcSetOwnerThunk(ctx wasmlib.ScFuncContext) {
	ctx.Log("prueba1.funcSetOwner")

	// current owner of this smart contract
	access := ctx.State().GetAgentID(wasmlib.Key("owner"))
	ctx.Require(access.Exists(), "access not set: owner")
	ctx.Require(ctx.Caller() == access.Value(), "no permission")

	f := &SetOwnerContext{
		Params: ImmutableSetOwnerParams{
			id: wasmlib.OBJ_ID_PARAMS,
		},
		State: Mutableprueba1State{
			id: wasmlib.OBJ_ID_STATE,
		},
	}
	ctx.Require(f.Params.Owner().Exists(), "missing mandatory owner")
	funcSetOwner(ctx, f)
	ctx.Log("prueba1.funcSetOwner ok")
}

type SetTextContext struct {
	Params  ImmutableSetTextParams
	State   Mutableprueba1State
}

func funcSetTextThunk(ctx wasmlib.ScFuncContext) {
	ctx.Log("prueba1.funcSetText")
	f := &SetTextContext{
		Params: ImmutableSetTextParams{
			id: wasmlib.OBJ_ID_PARAMS,
		},
		State: Mutableprueba1State{
			id: wasmlib.OBJ_ID_STATE,
		},
	}
	ctx.Require(f.Params.Res().Exists(), "missing mandatory res")
	funcSetText(ctx, f)
	ctx.Log("prueba1.funcSetText ok")
}

type GetOwnerContext struct {
	Results MutableGetOwnerResults
	State   Immutableprueba1State
}

func viewGetOwnerThunk(ctx wasmlib.ScViewContext) {
	ctx.Log("prueba1.viewGetOwner")
	f := &GetOwnerContext{
		Results: MutableGetOwnerResults{
			id: wasmlib.OBJ_ID_RESULTS,
		},
		State: Immutableprueba1State{
			id: wasmlib.OBJ_ID_STATE,
		},
	}
	viewGetOwner(ctx, f)
	ctx.Log("prueba1.viewGetOwner ok")
}

type GetTextContext struct {
	Results MutableGetTextResults
	State   Immutableprueba1State
}

func viewGetTextThunk(ctx wasmlib.ScViewContext) {
	ctx.Log("prueba1.viewGetText")
	f := &GetTextContext{
		Results: MutableGetTextResults{
			id: wasmlib.OBJ_ID_RESULTS,
		},
		State: Immutableprueba1State{
			id: wasmlib.OBJ_ID_STATE,
		},
	}
	viewGetText(ctx, f)
	ctx.Log("prueba1.viewGetText ok")
}
